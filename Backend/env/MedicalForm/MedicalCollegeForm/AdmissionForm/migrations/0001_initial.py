# Generated by Django 4.2.2 on 2023-06-23 05:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_contact_no', models.CharField(blank=True, default='', max_length=50)),
                ('student_email_id', models.EmailField(blank=True, default='', max_length=200)),
                ('mobile_1', models.CharField(blank=True, default='', max_length=20)),
                ('mobile_2', models.CharField(blank=True, default='', max_length=20)),
                ('mobile_3', models.CharField(blank=True, default='', max_length=20)),
                ('guardian_mobile', models.CharField(blank=True, default='', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MarkModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('neet_roll_no', models.CharField(blank=True, default='', max_length=200)),
                ('hsc_year_of_passing', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(3000)])),
                ('neet_year', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(3000)])),
                ('neet_study_center_name', models.CharField(blank=True, default='', max_length=500)),
                ('no_of_neet_attempts', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('neet_air', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('selection_committee_allotment_order_no', models.CharField(blank=True, default='', max_length=500)),
                ('selection_committee_general_rank', models.CharField(blank=True, default='', max_length=500)),
                ('allotment_order_data', models.DateField(blank=True, default=None, null=True)),
                ('neet_physics_mark', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('neet_chemistry_mark', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('neet_biology_mark', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('neet_total_mark', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(720)])),
                ('neet_physics_percentile', models.DecimalField(blank=True, decimal_places=8, default=0.0, max_digits=11, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('neet_chemistry_percentile', models.DecimalField(blank=True, decimal_places=8, default=0.0, max_digits=11, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('neet_biology_percentile', models.DecimalField(blank=True, decimal_places=8, default=0.0, max_digits=11, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('neet_total_percentile', models.DecimalField(blank=True, decimal_places=8, default=0.0, max_digits=11, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('hsc_physics_mark', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('hsc_chemistry_mark', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('hsc_biology_mark', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('hsc_total_mark', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('hsc_marks_maximum', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('pcb_percentage', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='ParentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_name', models.CharField(blank=True, default='', max_length=500)),
                ('father_occupation', models.CharField(blank=True, default='', max_length=500)),
                ('father_occupation_address', models.CharField(blank=True, default='', max_length=500)),
                ('father_phone_number', models.CharField(blank=True, default='', max_length=20)),
                ('father_email', models.EmailField(blank=True, default='', max_length=200)),
                ('mother_name', models.CharField(blank=True, default='', max_length=500)),
                ('mother_occupation', models.CharField(blank=True, default='', max_length=500)),
                ('mother_occupation_address', models.CharField(blank=True, default='', max_length=500)),
                ('mother_phone_number', models.CharField(blank=True, default='', max_length=20)),
                ('mother_email', models.EmailField(blank=True, default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='StudentModel',
            fields=[
                ('serial_no', models.CharField(blank=True, default='', max_length=500)),
                ('email', models.CharField(blank=True, max_length=500, primary_key=True, serialize=False)),
                ('date_of_joining', models.DateField(blank=True, default=None, null=True)),
                ('date_of_admission', models.DateField(blank=True, default=None, null=True)),
                ('admission_no', models.CharField(blank=True, default='', max_length=500)),
                ('ar_number', models.CharField(blank=True, default='', max_length=200)),
                ('allotment_date', models.DateField(blank=True, default=None, null=True)),
                ('student_name', models.CharField(blank=True, default='', max_length=500)),
                ('course', models.CharField(blank=True, default='', max_length=200)),
                ('university_register_number', models.CharField(blank=True, default='', max_length=100)),
                ('date_of_birth', models.DateField(blank=True, default=None, null=True)),
                ('gender', models.CharField(blank=True, default='', max_length=100)),
                ('is_hostellite', models.BooleanField(blank=True, default=False)),
                ('community', models.CharField(blank=True, choices=[('OC', 'OC'), ('BC', 'BC'), ('MBC', 'MBc'), ('SC', 'SC'), ('SCA', 'SCA'), ('ST', 'ST')], default='', max_length=20)),
                ('religion', models.CharField(blank=True, default='', max_length=300)),
                ('caste', models.CharField(blank=True, default='', max_length=300)),
                ('hsc_school_name', models.CharField(blank=True, default='', max_length=500)),
                ('hsc_register_no', models.CharField(blank=True, default='', max_length=100)),
                ('medium_of_study', models.CharField(blank=True, default='', max_length=200)),
                ('native_place', models.CharField(blank=True, default='', max_length=500)),
                ('blood_group', models.CharField(blank=True, default='', max_length=30)),
                ('height', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5)),
                ('address_for_communication', models.CharField(blank=True, default='', max_length=5000)),
                ('address_local_guardian', models.CharField(blank=True, default='', max_length=5000)),
                ('neet_hall_ticket_no', models.CharField(blank=True, default='', max_length=300)),
                ('neet_roll_no', models.CharField(blank=True, default='', max_length=300)),
                ('nationality', models.CharField(blank=True, default='', max_length=200)),
                ('quota', models.CharField(blank=True, choices=[('Govt', 'Govt'), ('Mgt', 'Mgt'), ('NRI', 'NRI'), ('NRILapsed', 'NRILapsed')], default='', max_length=20)),
                ('scholarship', models.CharField(blank=True, default='', max_length=500)),
                ('general_rank', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('mother_tongue', models.CharField(blank=True, default='', max_length=300)),
                ('status', models.IntegerField(validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('contact_info', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='AdmissionForm.contactmodel')),
                ('mark_info', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='AdmissionForm.markmodel')),
                ('parent_info', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='AdmissionForm.parentmodel')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
